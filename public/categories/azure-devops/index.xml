<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure Devops on Scott R Christian</title>
    <link>/categories/azure-devops/</link>
    <description>Recent content in Azure Devops on Scott R Christian</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jun 2025 19:12:22 +0000</lastBuildDate>
    <atom:link href="/categories/azure-devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configuring Azure DevOps Branch Policies to Enforce Pull Requests and Code Reviews</title>
      <link>/2025/06/20/configuring-azure-devops-branch-policies-to-enforce-pull-requests-and-code-reviews/</link>
      <pubDate>Fri, 20 Jun 2025 19:12:22 +0000</pubDate>
      <guid>/2025/06/20/configuring-azure-devops-branch-policies-to-enforce-pull-requests-and-code-reviews/</guid>
      <description>As a Software Development Engineer, ensuring code quality and security is paramount, especially when working with critical shared branches like master and those meant for releases. Azure DevOps provides branch policies to enforce development best practices, such as requiring pull requests (PRs) and code review approvals before merging changes. In this post, I’ll walk through how to configure branch policies in Azure DevOps to prevent direct commits to master or release branches and ensure all changes go through a PR with at least one reviewer’s approval.</description>
    </item>
  </channel>
</rss>
